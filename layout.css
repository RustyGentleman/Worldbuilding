body[current=home] #home {
  pointer-events: all;
  opacity: 1;
}
body[current=home] #home:not(.content-only) > .content,
body[current=home] #home > .sidebar {
  transform: translateX(0%);
}
body[current=home] #home.tiled > .tile,
body[current=home] #home .tiled > .tile, body[current=home] #home.content-only {
  transform: scale(1) !important;
  opacity: 1;
}

body[current=world] #world {
  pointer-events: all;
  opacity: 1;
}
body[current=world] #world:not(.content-only) > .content,
body[current=world] #world > .sidebar {
  transform: translateX(0%);
}
body[current=world] #world.tiled > .tile,
body[current=world] #world .tiled > .tile, body[current=world] #world.content-only {
  transform: scale(1) !important;
  opacity: 1;
}

body[current=whisperwood-forest] #whisperwood-forest {
  pointer-events: all;
  opacity: 1;
}
body[current=whisperwood-forest] #whisperwood-forest:not(.content-only) > .content,
body[current=whisperwood-forest] #whisperwood-forest > .sidebar {
  transform: translateX(0%);
}
body[current=whisperwood-forest] #whisperwood-forest.tiled > .tile,
body[current=whisperwood-forest] #whisperwood-forest .tiled > .tile, body[current=whisperwood-forest] #whisperwood-forest.content-only {
  transform: scale(1) !important;
  opacity: 1;
}

body[current=magicsystem] #magicsystem {
  pointer-events: all;
  opacity: 1;
}
body[current=magicsystem] #magicsystem:not(.content-only) > .content,
body[current=magicsystem] #magicsystem > .sidebar {
  transform: translateX(0%);
}
body[current=magicsystem] #magicsystem.tiled > .tile,
body[current=magicsystem] #magicsystem .tiled > .tile, body[current=magicsystem] #magicsystem.content-only {
  transform: scale(1) !important;
  opacity: 1;
}

body[current=schoolsofmagic] #schoolsofmagic {
  pointer-events: all;
  opacity: 1;
}
body[current=schoolsofmagic] #schoolsofmagic:not(.content-only) > .content,
body[current=schoolsofmagic] #schoolsofmagic > .sidebar {
  transform: translateX(0%);
}
body[current=schoolsofmagic] #schoolsofmagic.tiled > .tile,
body[current=schoolsofmagic] #schoolsofmagic .tiled > .tile, body[current=schoolsofmagic] #schoolsofmagic.content-only {
  transform: scale(1) !important;
  opacity: 1;
}

body[current=characters] #characters {
  pointer-events: all;
  opacity: 1;
}
body[current=characters] #characters:not(.content-only) > .content,
body[current=characters] #characters > .sidebar {
  transform: translateX(0%);
}
body[current=characters] #characters.tiled > .tile,
body[current=characters] #characters .tiled > .tile, body[current=characters] #characters.content-only {
  transform: scale(1) !important;
  opacity: 1;
}

body[current=ras] #ras {
  pointer-events: all;
  opacity: 1;
}
body[current=ras] #ras:not(.content-only) > .content,
body[current=ras] #ras > .sidebar {
  transform: translateX(0%);
}
body[current=ras] #ras.tiled > .tile,
body[current=ras] #ras .tiled > .tile, body[current=ras] #ras.content-only {
  transform: scale(1) !important;
  opacity: 1;
}

body[current=riella] #riella {
  pointer-events: all;
  opacity: 1;
}
body[current=riella] #riella:not(.content-only) > .content,
body[current=riella] #riella > .sidebar {
  transform: translateX(0%);
}
body[current=riella] #riella.tiled > .tile,
body[current=riella] #riella .tiled > .tile, body[current=riella] #riella.content-only {
  transform: scale(1) !important;
  opacity: 1;
}

body[current=races] #races {
  pointer-events: all;
  opacity: 1;
}
body[current=races] #races:not(.content-only) > .content,
body[current=races] #races > .sidebar {
  transform: translateX(0%);
}
body[current=races] #races.tiled > .tile,
body[current=races] #races .tiled > .tile, body[current=races] #races.content-only {
  transform: scale(1) !important;
  opacity: 1;
}

body[current=kitsunes] #kitsunes {
  pointer-events: all;
  opacity: 1;
}
body[current=kitsunes] #kitsunes:not(.content-only) > .content,
body[current=kitsunes] #kitsunes > .sidebar {
  transform: translateX(0%);
}
body[current=kitsunes] #kitsunes.tiled > .tile,
body[current=kitsunes] #kitsunes .tiled > .tile, body[current=kitsunes] #kitsunes.content-only {
  transform: scale(1) !important;
  opacity: 1;
}

body[current=elves] #elves {
  pointer-events: all;
  opacity: 1;
}
body[current=elves] #elves:not(.content-only) > .content,
body[current=elves] #elves > .sidebar {
  transform: translateX(0%);
}
body[current=elves] #elves.tiled > .tile,
body[current=elves] #elves .tiled > .tile, body[current=elves] #elves.content-only {
  transform: scale(1) !important;
  opacity: 1;
}

body {
  margin: 0;
  padding: 0;
  height: 100vh;
  width: 100vw;
  overflow: hidden;
}

.page {
  pointer-events: none;
  opacity: 0;
}

nav#topnav > div > .dropdown {
  transform-origin: top center;
  transform: translateY(-100%);
}
nav#topnav > div:hover > .dropdown,
nav#topnav > div .dropdown:hover {
  transform: translateY(0);
  opacity: 1;
}

.page > .sidebar {
  transform: translateX(-100%);
}
.page:not(.content-only) > .content {
  transform: translateX(100%);
}
.page.tiled > .tile,
.page .tiled > .tile, .page.content-only {
  transform: scale(0.7);
  opacity: 0;
}

:root {
  font-size: min(1rem, 4vw);
}

body {
  position: fixed;
  display: grid;
  grid-template-rows: auto 1fr;
}

nav#topnav {
  height: 2rem;
  position: relative;
  display: grid;
  grid-template-columns: 2.5rem;
  grid-auto-columns: 1fr;
  grid-auto-flow: column;
  text-align: center;
  box-shadow: 0 0 0 1px;
  z-index: 10;
}
nav#topnav > :first-child svg {
  height: 1.5rem;
  width: 1.5rem;
  margin-bottom: -0.1rem;
}
nav#topnav > div {
  position: relative;
}
nav#topnav > div button {
  position: relative;
  width: 100%;
  height: 100%;
  z-index: 2;
}
nav#topnav > div .dropdown {
  position: absolute;
  width: calc(100% - 1px);
  display: flex;
  flex-direction: column;
}

main {
  height: calc(100vh - 2rem);
  display: grid;
  align-items: center;
  overflow: hidden;
}

.page {
  height: calc(100vh - 2rem);
  display: grid;
  align-items: center;
  grid-area: 1/1/1/1;
  grid-template-columns: auto 1fr;
}
.page.content-only {
  margin-inline: auto;
}
.page.content-only .content {
  height: auto;
  max-height: calc(100vh - 2rem - 10rem);
}
.page:not(.content-only) .content {
  margin-left: -1px;
}

.sidebar {
  position: relative;
  height: calc(100vh - 2rem);
  width: 8rem;
  max-width: 30vw;
  display: flex;
  flex-direction: column;
  justify-content: center;
  padding-inline: 0.5rem;
}
.sidebar .header,
.sidebar .credit {
  text-align: center;
  margin-block: 1rem 0;
}
.sidebar .header:first-child,
.sidebar .credit:first-child {
  margin-top: 0;
}
.sidebar .header-pointer {
  padding-block: 0.2rem;
}
.sidebar [page-link] {
  text-align: center;
  width: -webkit-fit-content;
  width: -moz-fit-content;
  width: fit-content;
  margin-inline: auto;
}
.sidebar .last-updated {
  margin-block: 1rem 0;
}

.content {
  height: calc(100vh - 2rem - 10rem);
  overflow-y: scroll;
  overflow-x: hidden;
  padding: 5rem 1rem;
  text-align: center;
}
.content > h1, .content > h2, .content > h3 {
  margin: 0;
}
.content section {
  padding-block: 0.5rem;
  padding-inline: 0.5rem;
}
.content section p {
  margin-block: 0 0.5rem;
}
.content section p:last-of-type {
  margin-bottom: 0;
}
.content section, .content > h1, .content > h2, .content > h3 {
  max-width: 60rem;
  margin-inline: auto;
}
.content section.subcolumns {
  display: grid;
  grid-auto-columns: 1fr;
  grid-auto-flow: column;
}
.content section.subcolumns .title {
  display: inline-block;
  width: 100%;
  text-align: center;
  margin-bottom: 0.5rem;
}
.content section.subcolumns > .escape {
  grid-row: 1/-1;
  margin-block: 0.5rem;
}
.content section.subcolumns > .escape:first-child {
  margin-top: 0;
}
.content section.subcolumns > .escape:last-child {
  margin-bottom: 0;
}
.content section.subcolumns > :not(.escape) {
  grid-row: 2/2;
  padding-inline: 0.5rem;
}
.content section.subcolumns > :not(.escape):first-of-type:nth-last-of-type(2) {
  text-align: right;
}
.content section.subcolumns > :not(.escape):last-of-type:nth-of-type(2) {
  text-align: left;
}

.tiled {
  display: flex;
  place-items: center;
  place-content: center;
  flex-direction: row;
  flex-wrap: wrap;
}
.tiled .tile {
  width: 13rem;
  height: 10rem;
  position: relative;
  display: flex;
  place-items: center;
  place-content: center;
  margin: 2rem;
  aspect-ratio: 1;
}

header, .tile {
  text-align: center;
}
header, header > *, .tile, .tile > * {
  position: relative;
}
header img, header > * img, .tile img, .tile > * img {
  position: absolute;
  inset: 50%;
  transform: translate(-50%, -50%);
  pointer-events: none;
  z-index: -1;
}
header h1, .tile h1 {
  display: flex;
  flex-direction: column;
  margin: 0;
}
header h2, .tile h2 {
  margin-top: -0.8em;
  margin-bottom: 0;
}
/*# sourceMappingURL=layout.css.map */