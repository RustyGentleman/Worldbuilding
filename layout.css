body[current=home] > main > #home {
  pointer-events: all;
  opacity: 1;
}
body[current=home] > main > #home:not(.content-only) > .content,
body[current=home] > main > #home > .sidebar {
  transform: translateX(0%);
}
body[current=home] > main > #home.tiled > .tile, body[current=home] > main > #home.content-only {
  transform: scale(1) !important;
  opacity: 1;
}

body[current=world] > main > #world {
  pointer-events: all;
  opacity: 1;
}
body[current=world] > main > #world:not(.content-only) > .content,
body[current=world] > main > #world > .sidebar {
  transform: translateX(0%);
}
body[current=world] > main > #world.tiled > .tile, body[current=world] > main > #world.content-only {
  transform: scale(1) !important;
  opacity: 1;
}

body[current=whisperwood-forest] > main > #whisperwood-forest {
  pointer-events: all;
  opacity: 1;
}
body[current=whisperwood-forest] > main > #whisperwood-forest:not(.content-only) > .content,
body[current=whisperwood-forest] > main > #whisperwood-forest > .sidebar {
  transform: translateX(0%);
}
body[current=whisperwood-forest] > main > #whisperwood-forest.tiled > .tile, body[current=whisperwood-forest] > main > #whisperwood-forest.content-only {
  transform: scale(1) !important;
  opacity: 1;
}

body[current=characters] > main > #characters {
  pointer-events: all;
  opacity: 1;
}
body[current=characters] > main > #characters:not(.content-only) > .content,
body[current=characters] > main > #characters > .sidebar {
  transform: translateX(0%);
}
body[current=characters] > main > #characters.tiled > .tile, body[current=characters] > main > #characters.content-only {
  transform: scale(1) !important;
  opacity: 1;
}

body[current=races] > main > #races {
  pointer-events: all;
  opacity: 1;
}
body[current=races] > main > #races:not(.content-only) > .content,
body[current=races] > main > #races > .sidebar {
  transform: translateX(0%);
}
body[current=races] > main > #races.tiled > .tile, body[current=races] > main > #races.content-only {
  transform: scale(1) !important;
  opacity: 1;
}

body[current=ras] > main > #ras {
  pointer-events: all;
  opacity: 1;
}
body[current=ras] > main > #ras:not(.content-only) > .content,
body[current=ras] > main > #ras > .sidebar {
  transform: translateX(0%);
}
body[current=ras] > main > #ras.tiled > .tile, body[current=ras] > main > #ras.content-only {
  transform: scale(1) !important;
  opacity: 1;
}

body[current=riella] > main > #riella {
  pointer-events: all;
  opacity: 1;
}
body[current=riella] > main > #riella:not(.content-only) > .content,
body[current=riella] > main > #riella > .sidebar {
  transform: translateX(0%);
}
body[current=riella] > main > #riella.tiled > .tile, body[current=riella] > main > #riella.content-only {
  transform: scale(1) !important;
  opacity: 1;
}

body[current=kitsunes] > main > #kitsunes {
  pointer-events: all;
  opacity: 1;
}
body[current=kitsunes] > main > #kitsunes:not(.content-only) > .content,
body[current=kitsunes] > main > #kitsunes > .sidebar {
  transform: translateX(0%);
}
body[current=kitsunes] > main > #kitsunes.tiled > .tile, body[current=kitsunes] > main > #kitsunes.content-only {
  transform: scale(1) !important;
  opacity: 1;
}

body {
  margin: 0;
  padding: 0;
  height: 100vh;
  width: 100vw;
  overflow: hidden;
}

.page {
  pointer-events: none;
  opacity: 0;
}

.page:not(.content-only) > .content {
  transform: translateX(100%);
}
.page > .sidebar {
  transform: translateX(-100%);
}
.page.tiled > .tile, .page.content-only {
  transform: scale(0.7);
  opacity: 0;
}

body {
  display: grid;
  grid-template-rows: auto 1fr;
}

nav#topnav {
  display: grid;
  grid-template-columns: 2.5rem;
  grid-auto-columns: 1fr;
  grid-auto-flow: column;
}
nav#topnav > :first-child svg {
  height: 1.5rem;
  width: 1.5rem;
  margin-bottom: -0.1rem;
}
nav#topnav > div:hover > .dropdown {
  transform: translate(-1px, 0);
  opacity: 1;
}
nav#topnav .dropdown {
  transform-origin: top center;
  transform: translate(-1px, -100%);
}
nav#topnav .dropdown:hover {
  transform: translate(-1px, 0);
  opacity: 1;
}

main {
  display: grid;
  align-items: center;
}

.page {
  display: grid;
  align-items: center;
  grid-area: 1/1/1/1;
  grid-template-columns: auto 1fr;
}
.page .sidebar {
  width: 5rem;
  display: flex;
  flex-direction: column;
  justify-content: center;
}
.page .content {
  overflow-y: scroll;
  overflow-x: hidden;
}
.page .content section.subcolumns {
  display: grid;
  grid-auto-columns: 1fr;
  grid-auto-flow: column;
}
.page .content section.subcolumns > .escape {
  grid-row: 1/1;
}
.page .content section.subcolumns > :not(.escape) {
  grid-row: 2/2;
  padding-inline: 0.5rem;
  border-right: solid 1px;
  -o-border-image: linear-gradient(to top, transparent, currentColor, currentColor, transparent);
     border-image: linear-gradient(to top, transparent, currentColor, currentColor, transparent);
  border-image-slice: 1;
}
.page .content section.subcolumns > :not(.escape):first-of-type {
  padding-left: 0;
}
.page .content section.subcolumns > :not(.escape):last-of-type {
  padding-right: 0;
  border: none;
}

.page.tiled {
  display: flex;
  place-items: center;
  place-content: center;
  flex-direction: row;
  flex-wrap: wrap;
}
.page.tiled .tile {
  width: 13rem;
  height: 13rem;
  position: relative;
  display: flex;
  place-items: center;
  place-content: center;
  aspect-ratio: 1;
}

.page.content-only {
  margin-inline: auto;
}

main {
  height: calc(100vh - 2rem);
}

.page {
  max-height: calc(100vh - 2rem);
  height: -webkit-fit-content;
  height: -moz-fit-content;
  height: fit-content;
}
.page .sidebar {
  height: calc(100vh - 2rem);
  width: 11rem;
  padding-block: 1rem;
}
.page .sidebar .header-pointer {
  padding: 0.1rem 1rem;
}
.page .content {
  max-height: calc(100vh - 2rem - 10rem);
  padding: 1rem;
  padding-block: 5rem;
}

.page.tiled .tile {
  margin: 2rem;
}
/*# sourceMappingURL=layout.css.map */